<?php
/**
 * @file
 * sif_students_example.module
 */

/**
 * Implements hook_menu().
 */
function sif_students_example_menu() {
  $items = array();
  $items['sif/students'] = array(
    'title' => 'Students',
    'description' => 'Create and manage SIF students.',
    'page callback' => 'sif_students_example_page',
    'access arguments' => array('configure sif'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'pages.inc',
  );
  $items['sif/students/create'] = array(
    'title' => 'Create Student',
    'description' => 'Create a new queue.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_students_example_create'),
    'access arguments' => array('configure sif'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'pages.inc',
  );
  $items['sif/students/get'] = array(
    'title' => 'Get or Update Students',
    'description' => 'Load all students from the SIF server.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_students_example_get'),
    'access arguments' => array('configure sif'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'pages.inc',
  );

  return $items;
}

/**
 * Implements hook_sif_data_object_types().
 */
function sif_students_example_sif_data_object_types(){
  return array(
    'student' => array(
      'name' => t('Student'),
      'properties' => array(
        'localId',
      ),
    ),
  );
}

/**
 * Load Student
 */
function sif_load_student(&$entity, $ids = array(), $conditions = array()){

  // Demographics
  if (property_exists($entity->data, 'demographics')){
    $entity->demographics = array();
    foreach ($entity->data->demographics->children() as $demographic => $s){
      $entity->demographics[(string) $demographic] = (string) $s;
    }
  }

  // Email addresses
  $entity->emailList = array();
  foreach ($entity->data->emailList->children() as $s){
    $entity->emailList[(string) $s->attributes()->emailType] = (string) $s;
  }

  // Name
  $entity->name = array();
  foreach ($entity->data->name->nameOfRecord->children() as $type => $s){
    $entity->name[(string) $type] = (string) $s;
  }
}
