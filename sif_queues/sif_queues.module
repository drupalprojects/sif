<?php
/**
 * @file
 * sif_queues.module
 */

/**
 * Implements hook_menu().
 */
function sif_queues_menu() {
  $items = array();
  $items['admin/sif/queues'] = array(
    'title' => 'Queues',
    'description' => 'Create and manage SIF queues.',
    'page callback' => 'sif_queues_page',
    'access arguments' => array('configure sif'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'pages.inc',
  );
  $items['admin/sif/queues/create'] = array(
    'title' => 'Create Queue',
    'description' => 'Create a new queue.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_queues_create'),
    'access arguments' => array('configure sif'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'pages.inc',
  );
  $items['admin/sif/queues/get'] = array(
    'title' => 'Get or Update Queues',
    'description' => 'Load all queues from the SIF server.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_queues_get'),
    'access arguments' => array('configure sif'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'pages.inc',
  );
  $items['admin/sif/queues/%/schedule'] = array(
    'title' => 'Schedule Queue Processing',
    'description' => 'Schedule how often this queue will be queried.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_queues_schedule', 3),
    'access arguments' => array('configure sif'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'pages.inc',
  );


  // SIF Object View page.
  $items['sif/%sif_object/messages'] = array(
    'title' => 'Messages',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_queues_get_messages', 1),
    'access callback' => 'sif_queues_menu_access',
    'access arguments' => array(1),
    'file' => 'includes/pages.inc',
    'type' => MENU_LOCAL_TASK,
    'file' => 'messages.inc',
  );

  // Subscriptions
  $items['admin/sif/%/subscriptions'] = array(
    'title' => 'Subscriptions',
    'description' => 'Create and manage SIF subscriptions.',
    'page callback' => 'sif_subscriptions_page',
    'page arguments' => array(2),
    'access arguments' => array('configure sif'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'subscriptions.inc',
  );
  $items['admin/sif/%/subscriptions/create'] = array(
    'title' => 'Create Subscription',
    'description' => 'Create a new subscription.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_subscriptions_create', 2),
    'access arguments' => array('configure sif'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'subscriptions.inc',
  );
  $items['admin/sif/%/subscriptions/get'] = array(
    'title' => 'Get or Update Subscriptions',
    'description' => 'Load all subscriptions from the SIF server.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sif_subscriptions_get', 2),
    'access arguments' => array('configure sif'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'subscriptions.inc',
  );
  return $items;
}

/**
 *  Only show up on queues.
 */
function sif_queues_menu_access($sif_object){
  return $sif_object->type == 'queue';
}

/**
 * Implements hook_cron_queue_info()
 */
function sif_queues_cron_queue_info() {
  $queues = array();
  $queues['sif_queue_list'] = array(
    'worker callback' => 'sif_queue_process',
    'time' => 60,
  );
  return $queues;
}

/**
* Implements hook_cron().
*/
function sif_queues_cron() {
  $drupal_queue = DrupalQueue::get('sif_queue_list');

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'sif_data_object')
    ->entityCondition('bundle', 'queue');
  $result = $query->execute();

  if (isset($result['sif_data_object'])) {
    foreach ($result['sif_data_object'] as $object){
      $object_ids = array_keys($result['sif_data_object']);
      $queues = entity_load('sif_data_object', $object_ids);
    }
    foreach ($queues as $queue){
      $timing = variable_get('sif_queue_' . $queue, array('length' => 1, 'period' => 'hour', 'status' => 'enabled', 'last' => time()));
      if (time() >= strtotime('plus ' . $timing['length'] . ' ' . $timing['period'], $timing['last'])) {
        $drupal_queue->createItem($queue);
      }
    }
  }
}

/**
 * Processes the SIF queues stored in the drupal queue
 */
function sif_queue_process($queue){
  $last_message = variable_get("sif_queue_last_$queue", '');
  while ($results = sif_get('queue', array('id' => $id, 'path' => 'messages', 'multi' => TRUE, 'deleteMessageId' => $last_message))) {
    if ($xml = new SimpleXMLElement($results->data)) {
      $type = $xml->getName();
      if (property_exists($xml->attributes(), 'id')) {
        $id = $xml->attributes()->id;
      } else {
        $id = $xml->attributes()->refId;
      }
      //$type = rtrim($type, 's');
      sif_store($type, $results->data, $results->headers);
      variable_set("sif_queue_last_$queue", $id);
    }
  }
  variable_set("sif_queue_last_$queue", '');
}
